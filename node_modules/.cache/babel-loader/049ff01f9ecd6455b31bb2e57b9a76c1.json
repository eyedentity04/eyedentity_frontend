{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js\";\nimport React from \"react\";\nimport { Formik } from 'formik';\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from 'react-bootstrap';\n\nconst Add = props => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      description: '',\n      image: null\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append('description', values.description);\n      formData.append('image', values.image);\n      props.add(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mt-5\",\n    id: \"description\",\n    name: \"description\",\n    rows: 6,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.description,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    onChange: event => {\n      props.setFieldValue('image', event.currentTarget.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = {\n  add: add\n};\nexport default connect(null, mapDispatchToProps)(Add); // const Add = (props) => {\n//   const [data, setData] = useState({\n//     description: \"\",\n//     image : null\n//   });\n//   const handleAdd = () => {\n//     props.add(data);\n//     console.log(data)\n//   };\n//   const handleChange = (event) => {\n//     let { name, value } = event.currentTarget;\n//     setData({\n//       ...data,\n//       [name]: value,\n//     });\n//   };\n//   const handleImage = (event) => {\n//     let {image,value} = event.currentTarget\n//     setData({\n//       ...data,\n//       [image] : value\n//     })\n//   }\n//   return (\n//     <div className=\"container\">\n//       <div className=\"form-group\">\n//         <textarea\n//           className=\"form-control mt-5\"\n//           id=\"description\"\n//           name=\"description\"\n//           rows={6}\n//           style={{ resize: \"none\" }}\n//           value={data.description}\n//           placeholder=\"Type something....\"\n//           onChange={handleChange}\n//         />\n//         <input\n//           type=\"file\"\n//           className=\"form-control\"\n//           id=\"image\"\n//           name=\"image\"\n//           value={data.image}\n//           onChange={handleChange}\n//           accept=\"image/x-png,image/gif,image/jpeg\" \n//         />\n//       </div>\n//       <button type=\"button\" class=\"btn btn-info\" onClick={handleAdd}>\n//         Submit\n//       </button>\n//     </div>\n//   );\n// };\n// const mapDispatchToProps = { add: add };\n// export default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js"],"names":["React","Formik","connect","add","Form","Add","props","description","image","values","formData","FormData","append","handleSubmit","resize","handleChange","event","setFieldValue","currentTarget","files","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,2BAApB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAG,EADD;AAEbC,MAAAA,KAAK,EAAG;AAFK,KADjB;AAKE,IAAA,QAAQ,EAAIC,MAAD,IAAU;AACnB,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA8BH,MAAM,CAACF,WAArC;AACAG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAwBH,MAAM,CAACD,KAA/B;AAEAF,MAAAA,KAAK,CAACH,GAAN,CAAUO,QAAV;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGJ,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACO,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,mBADV;AAEA,IAAA,EAAE,EAAC,aAFH;AAGA,IAAA,IAAI,EAAC,aAHL;AAIA,IAAA,IAAI,EAAE,CAJN;AAKA,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALP;AAMA,IAAA,KAAK,EAAER,KAAK,CAACG,MAAN,CAAaF,WANpB;AAOA,IAAA,WAAW,EAAC,oBAPZ;AAQA,IAAA,QAAQ,EAAED,KAAK,CAACS,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWA;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAGC,KAAD,IAAS;AACjBV,MAAAA,KAAK,CAACW,aAAN,CAAoB,OAApB,EAA4BD,KAAK,CAACE,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAA5B;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADF,eAsBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,CADF,CAfJ,CADF;AA+CD,CAhDH;;AAkDA,MAAMC,kBAAkB,GAAG;AAAEjB,EAAAA,GAAG,EAAEA;AAAP,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCf,GAAlC,CAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from \"react\";\nimport {Formik} from 'formik'\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport {Form} from 'react-bootstrap'\n\nconst Add = (props) => {\n    return (\n      <Formik\n        initialValues={{\n          description : '',\n          image : null\n        }}\n        onSubmit ={(values)=>{\n          let formData = new FormData();\n\n          formData.append('description',values.description)\n          formData.append('image',values.image)\n\n          props.add(formData);\n        }}\n      >\n        {props => (\n          <Form onSubmit={props.handleSubmit}>\n            <div className=\"container\">\n              <div className=\"form-group\">\n                <textarea\n                className=\"form-control mt-5\"\n                id=\"description\"\n                name=\"description\"\n                rows={6}\n                style={{ resize: \"none\" }}\n                value={props.values.description}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"image\"\n                name=\"image\"\n                onChange={(event)=>{\n                  props.setFieldValue('image',event.currentTarget.files[0])\n                }}\n              />\n              </div>\n              <button type=\"submit\" className=\"btn btn-info\" >\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\nconst mapDispatchToProps = { add: add };\n\nexport default connect(null, mapDispatchToProps)(Add);\n\n\n// const Add = (props) => {\n//   const [data, setData] = useState({\n//     description: \"\",\n//     image : null\n//   });\n\n//   const handleAdd = () => {\n//     props.add(data);\n//     console.log(data)\n//   };\n\n//   const handleChange = (event) => {\n//     let { name, value } = event.currentTarget;\n//     setData({\n//       ...data,\n//       [name]: value,\n    \n//     });\n//   };\n\n//   const handleImage = (event) => {\n//     let {image,value} = event.currentTarget\n//     setData({\n//       ...data,\n//       [image] : value\n//     })\n//   }\n\n//   return (\n//     <div className=\"container\">\n//       <div className=\"form-group\">\n//         <textarea\n//           className=\"form-control mt-5\"\n//           id=\"description\"\n//           name=\"description\"\n//           rows={6}\n//           style={{ resize: \"none\" }}\n//           value={data.description}\n//           placeholder=\"Type something....\"\n//           onChange={handleChange}\n//         />\n\n//         <input\n//           type=\"file\"\n//           className=\"form-control\"\n//           id=\"image\"\n//           name=\"image\"\n//           value={data.image}\n//           onChange={handleChange}\n//           accept=\"image/x-png,image/gif,image/jpeg\" \n//         />\n\n//       </div>\n//       <button type=\"button\" class=\"btn btn-info\" onClick={handleAdd}>\n//         Submit\n//       </button>\n//     </div>\n//   );\n// };\n\n// const mapDispatchToProps = { add: add };\n\n// export default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}