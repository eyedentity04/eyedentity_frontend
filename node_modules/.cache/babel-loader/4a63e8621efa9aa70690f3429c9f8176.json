{"ast":null,"code":"var _jsxFileName = \"/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Add.css\";\n\nconst CommentPost = props => {\n  // const {data} = props\n  const [comment, setComment] = useState([]);\n  const url = process.env.REACT_APP_API_URL;\n  useEffect(() => {\n    async function myComment() {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const token = user.token;\n      const result = await axios.get(`${url}/comment/find/${props.data._id}`, {\n        headers: {\n          \"token\": token\n        }\n      }).catch(err => {\n        window.alert(\"error\", err);\n      });\n      setComment(result.data);\n      console.log(result.data);\n    }\n\n    myComment();\n  }, []);\n  let getComment = comment.map((item, index) => {\n    console.log(item.comment);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item,\n      data: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }, item.comment.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 60\n      }\n    }, item.userComment.name)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, item.comment.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n      key: index,\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 58\n      }\n    }, item.commentText)))));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: item,\n    data: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, item.comment.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, item.userComment.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, item.comment.map((item, index) => /*#__PURE__*/React.createElement(\"span\", {\n    key: index,\n    data: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, item.commentText))))); //   return <div>{getComment}</div>;\n};\n\nexport default CommentPost;","map":{"version":3,"sources":["/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js"],"names":["React","useState","useEffect","axios","CommentPost","props","comment","setComment","url","process","env","REACT_APP_API_URL","myComment","user","JSON","parse","localStorage","getItem","token","result","get","data","_id","headers","catch","err","window","alert","console","log","getComment","map","item","index","userComment","name","commentText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B;AAEA,QAAM,CAACC,OAAD,EAASC,UAAT,IAAuBN,QAAQ,CAAC,EAAD,CAArC;AAEA,QAAMO,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAEAT,EAAAA,SAAS,CAAC,MAAK;AAEX,mBAAeU,SAAf,GAA2B;AACvB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,YAAMC,KAAK,GAAGL,IAAI,CAACK,KAAnB;AACA,YAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEZ,GAAI,iBAAgBH,KAAK,CAACgB,IAAN,CAAWC,GAAI,EAAhD,EAAkD;AACvEC,QAAAA,OAAO,EAAE;AAAE,mBAASL;AAAX;AAD8D,OAAlD,EAElBM,KAFkB,CAEZC,GAAG,IAAI;AACZC,QAAAA,MAAM,CAACC,KAAP,CAAa,OAAb,EAAqBF,GAArB;AACH,OAJoB,CAArB;AAKAlB,MAAAA,UAAU,CAACY,MAAM,CAACE,IAAR,CAAV;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACE,IAAnB;AACH;;AACDT,IAAAA,SAAS;AAEZ,GAfQ,EAeN,EAfM,CAAT;AAkBA,MAAIkB,UAAU,GAAGxB,OAAO,CAACyB,GAAR,CAAY,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACzCL,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAAC1B,OAAjB;AACA,wBACI;AAAK,MAAA,GAAG,EAAE0B,IAAV;AAAgB,MAAA,IAAI,EAAEC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAAC1B,OAAL,CAAayB,GAAb,CAAiB,CAACC,IAAD,EAAMC,KAAN,kBAAgB;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,IAAI,CAACE,WAAL,CAAiBC,IAAhD,CAAjC,CAAN,CADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,IAAI,CAAC1B,OAAL,CAAayB,GAAb,CAAiB,CAACC,IAAD,EAAMC,KAAN,kBAAgB;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BA,IAAI,CAACI,WAApC,CAAjC,CAAJ,CADJ,CAJJ,CADJ;AAYH,GAdgB,CAAjB;AAgBA,sBACE;AAAK,IAAA,GAAG,EAAEJ,IAAV;AAAgB,IAAA,IAAI,EAAEC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAAC1B,OAAL,CAAayB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,WAAL,CAAiBC,IADpB,CADD,CADH,CADF,CADF,eAUE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAAC1B,OAAL,CAAayB,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBAChB;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,IAAI,EAAED,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACI,WADR,CADD,CADH,CADF,CAVF,CADF,CA1C2B,CAkE/B;AACC,CAnED;;AAqEA,eAAehC,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport \"./Add.css\";\n\nconst CommentPost = (props) => {\n\n    // const {data} = props\n\n    const [comment,setComment] = useState([])\n\n    const url = process.env.REACT_APP_API_URL\n\n    useEffect(() =>{\n       \n        async function myComment() {\n            const user = JSON.parse(localStorage.getItem(\"user\"))\n            const token = user.token\n            const result = await axios.get(`${url}/comment/find/${props.data._id}`,{\n            headers: { \"token\": token }\n            }).catch(err => {\n                window.alert(\"error\",err)\n            })\n            setComment(result.data)\n            console.log(result.data)\n        }\n        myComment()\n        \n    }, [])\n    \n\n    let getComment = comment.map((item,index) => {\n        console.log(item.comment)\n        return(\n            <div key={item} data={index}>\n                <div className=\"card-title\">\n                    <h6 >{item.comment.map((item,index) => <span key={index} data={item}>{item.userComment.name}</span>)}</h6>\n                </div>\n                <div className=\"card-text\"> \n                    <p>{item.comment.map((item,index) => <span key={index} data={item}>{item.commentText}</span>)}</p>\n                </div>\n                \n            </div>\n        )\n        \n    })\n\n    return (\n      <div key={item} data={index}>\n        <div className=\"card-title\">\n          <h6>\n            {item.comment.map((item, index) => (\n              <span key={index} data={item}>\n                {item.userComment.name}\n              </span>\n            ))}\n          </h6>\n        </div>\n        <div className=\"card-text\">\n          <p>\n            {item.comment.map((item, index) => (\n              <span key={index} data={item}> \n                {item.commentText}\n              </span>\n            ))}\n          </p>\n        </div>\n      </div>\n    );\n  \n\n//   return <div>{getComment}</div>;\n};\n\nexport default CommentPost;\n"]},"metadata":{},"sourceType":"module"}