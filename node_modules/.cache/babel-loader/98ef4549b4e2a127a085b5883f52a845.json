{"ast":null,"code":"var _jsxFileName = \"/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getlocation } from \"../../actioncreators/GetLocation\";\nimport Geocode from \"react-geocode\";\n\nconst Location = props => {\n  const {\n    coords: {\n      latitude,\n      longitude\n    }\n  } = props;\n  useEffect(() => {\n    props.getlocation();\n  }, []);\n  Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n  Geocode.fromLatLng(`${latitude}`, `${longitude}`).then(response => {\n    const address = response.results[0].formatted_address;\n    setData(address);\n    console.log(setData(address));\n  }, error => {\n    console.error(error);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Latitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, latitude)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Longitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 20\n    }\n  }, longitude)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"address : \"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    coords: state.location.coords\n  };\n};\n\nconst mapDispatchToProps = {\n  getlocation: getlocation\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js"],"names":["React","useState","useEffect","connect","getlocation","Geocode","Location","props","coords","latitude","longitude","setApiKey","fromLatLng","then","response","address","results","formatted_address","setData","console","log","error","mapStateToProps","state","location","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kCAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AACJC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AADJ,MAEFH,KAFJ;AAIAL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAACH,WAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAC,EAAAA,OAAO,CAACM,SAAR,CAAkB,yCAAlB;AACAN,EAAAA,OAAO,CAACO,UAAR,CAAoB,GAAEH,QAAS,EAA/B,EAAmC,GAAEC,SAAU,EAA/C,EAAkDG,IAAlD,CACGC,QAAD,IAAc;AACZ,UAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACH,OAAD,CAAnB;AACD,GALH,EAMGM,KAAD,IAAW;AACTF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,GARH;AAWA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,QAAP,CADZ,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,CADb,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF;AAWD,CAhCD;;AAkCA,MAAMY,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLf,IAAAA,MAAM,EAAEe,KAAK,CAACC,QAAN,CAAehB;AADlB,GAAP;AAGD,CAJD;;AAMA,MAAMiB,kBAAkB,GAAG;AACzBrB,EAAAA,WAAW,EAAEA;AADY,CAA3B;AAIA,eAAeD,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getlocation } from \"../../actioncreators/GetLocation\";\nimport Geocode from \"react-geocode\";\n\nconst Location = (props) => {\n  const {\n    coords: { latitude, longitude },\n  } = props;\n\n  useEffect(() => {\n    props.getlocation();\n  }, []);\n\n  Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n  Geocode.fromLatLng(`${latitude}`, `${longitude}`).then(\n    (response) => {\n      const address = response.results[0].formatted_address;\n      setData(address);\n      console.log(setData(address));\n    },\n    (error) => {\n      console.error(error);\n    }\n  );\n\n  return (\n    <div>\n      <div>\n        Latitude: <span>{latitude}</span>\n      </div>\n      <div>\n        Longitude: <span>{longitude}</span>\n      </div>\n      <div>address : </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    coords: state.location.coords,\n  };\n};\n\nconst mapDispatchToProps = {\n  getlocation: getlocation,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\n"]},"metadata":{},"sourceType":"module"}