{"ast":null,"code":"import axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\nconst url = process.env.REACT_APP_API_URL;\nexport const register = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${url}/users/register`, data);\n      dispatch({\n        type: \"USER_REGISTER\",\n        payload: response.data.data\n      });\n      const history = useHistory();\n      history.push(\"/login\");\n    } catch (error) {\n      if (error.message) {\n        const failedRegister = JSON.stringify(error.response.data);\n        error && alert(` ${failedRegister}`);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/register.js"],"names":["axios","useHistory","url","process","env","REACT_APP_API_URL","register","data","dispatch","response","post","type","payload","history","push","error","message","failedRegister","JSON","stringify","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAGA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAER,GAAI,iBAAlB,EAAmCK,IAAnC,CAAvB;AACAC,MAAAA,QAAQ,CAAE;AACRG,QAAAA,IAAI,EAAG,eADC;AAERC,QAAAA,OAAO,EAAGH,QAAQ,CAACF,IAAT,CAAcA;AAFhB,OAAF,CAAR;AAIA,YAAMM,OAAO,GAAGZ,UAAU,EAA1B;AACAY,MAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AAED,KATD,CASC,OAAOC,KAAP,EAAa;AACZ,UAAIA,KAAK,CAACC,OAAV,EAAmB;AACjB,cAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACN,QAAN,CAAeF,IAA9B,CAAvB;AACAQ,QAAAA,KAAK,IAAIK,KAAK,CAAE,IAAGH,cAAe,EAApB,CAAd;AACD;AACF;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import axios from \"axios\";\nimport {useHistory} from 'react-router-dom'\n\nconst url = process.env.REACT_APP_API_URL\n\n\nexport const register = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(`${url}/users/register`,data)\n      dispatch ({\n        type : \"USER_REGISTER\",\n        payload : response.data.data,\n      })\n      const history = useHistory()\n      history.push(\"/login\")\n      \n    }catch (error){\n      if (error.message) {\n        const failedRegister = JSON.stringify(error.response.data)\n        error && alert(` ${failedRegister}`)\n      }\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}