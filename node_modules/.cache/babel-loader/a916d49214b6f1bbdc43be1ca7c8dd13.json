{"ast":null,"code":"var _jsxFileName = \"/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/Add.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\n\nconst Add = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [url, setUrl] = useState(\"http://api.riyofirsan.com/users/findQuery?name=redux\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n      setData(result.data);\n      console.log(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[3].formatted_address\n        });\n      });\n    });\n  }, []);\n  let city = data.city; // console.log(city)\n\n  let lng = data.lng; // console.log(lng)\n\n  let lath = data.lat; // console.log(lath)\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: id,\n      description: \"\",\n      image: null,\n      namePlace: city,\n      long: lng,\n      lat: lath // tag: \"\",\n\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append(\"name\", values.name);\n      formData.append(\"description\", values.description);\n      formData.append(\"image\", values.image);\n      formData.append(\"namePlace\", city);\n      formData.append(\"long\", lng);\n      formData.append(\"lat\", lath); // formData.append(\"tag\", values.tag);\n\n      props.add(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mt-5\",\n    id: \"description\",\n    name: \"description\",\n    rows: 6,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.description,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    value: props.namePlace,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setUrl(`http://api.riyofirsan.com/users/findQuery?name=${query}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    onChange: event => {\n      props.setFieldValue(\"image\", event.currentTarget.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    style: {\n      backgroundColor: \"#8D7B65\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = {\n  add: add\n};\nexport default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/Add.js"],"names":["React","useState","useEffect","Formik","connect","add","Form","Geocode","Filter","axios","Add","props","user","JSON","parse","localStorage","getItem","id","data","setData","query","setQuery","url","setUrl","fetchData","result","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setApiKey","fromLatLng","then","response","results","address_components","long_name","lat","geometry","location","lng","city","formatted_address","lath","name","description","image","namePlace","long","values","formData","FormData","append","handleSubmit","resize","handleChange","event","target","value","setFieldValue","currentTarget","files","backgroundColor","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,2BAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,EAAE,GAAGL,IAAI,CAACK,EAAhB;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,GAAD,EAAMC,MAAN,IAAgBtB,QAAQ,CAC5B,sDAD4B,CAA9B;AAIAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMhB,KAAK,CAACa,GAAD,CAA1B;AAEAH,MAAAA,OAAO,CAACM,MAAM,CAACP,IAAR,CAAP;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACP,IAAnB;AACD,KALD;;AAOAM,IAAAA,SAAS;AACV,GATQ,EASN,CAACF,GAAD,CATM,CAAT;AAaApB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAUC,QAAV,EAAoB;AAC3DL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,MAAT,CAAgBC,QAA5B;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACC,MAAT,CAAgBE,SAA5B;AACA3B,MAAAA,OAAO,CAAC4B,SAAR,CAAkB,yCAAlB;AACA5B,MAAAA,OAAO,CAAC6B,UAAR,CACEL,QAAQ,CAACC,MAAT,CAAgBC,QADlB,EAEEF,QAAQ,CAACC,MAAT,CAAgBE,SAFlB,EAGEG,IAHF,CAGQC,QAAD,IAAc;AACnBZ,QAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,kBAApB,CAAuC,CAAvC,EAA0CC,SAAtD;AACAtB,QAAAA,OAAO,CAAC;AACNuB,UAAAA,GAAG,EAAEJ,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBI,QAApB,CAA6BC,QAA7B,CAAsCF,GADrC;AAENG,UAAAA,GAAG,EAAEP,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBI,QAApB,CAA6BC,QAA7B,CAAsCC,GAFrC;AAGNC,UAAAA,IAAI,EAAER,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBQ;AAHpB,SAAD,CAAP;AAKD,OAVD;AAWD,KAfD;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,MAAID,IAAI,GAAG5B,IAAI,CAAC4B,IAAhB,CA1CqB,CA2CrB;;AACA,MAAID,GAAG,GAAG3B,IAAI,CAAC2B,GAAf,CA5CqB,CA6CrB;;AACA,MAAIG,IAAI,GAAG9B,IAAI,CAACwB,GAAhB,CA9CqB,CA+CrB;;AAEA,sBACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbO,MAAAA,IAAI,EAAEhC,EADO;AAEbiC,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,KAAK,EAAE,IAHM;AAIbC,MAAAA,SAAS,EAAEN,IAJE;AAKbO,MAAAA,IAAI,EAAER,GALO;AAMbH,MAAAA,GAAG,EAAEM,IANQ,CAOb;;AAPa,KADjB;AAUE,IAAA,QAAQ,EAAGM,MAAD,IAAY;AACpB,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,MAAM,CAACL,IAA/B;AACAM,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BH,MAAM,CAACJ,WAAtC;AACAK,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,MAAM,CAACH,KAAhC;AACAI,MAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BX,IAA7B;AACAS,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBZ,GAAxB;AACAU,MAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBT,IAAvB,EARoB,CASpB;;AAEArC,MAAAA,KAAK,CAACN,GAAN,CAAUkD,QAAV;AACD,KAtBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAwBI5C,KAAD,iBACC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAAC+C,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,IAAI,EAAC,aAHP;AAIE,IAAA,IAAI,EAAE,CAJR;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALT;AAME,IAAA,KAAK,EAAEhD,KAAK,CAAC2C,MAAN,CAAaJ,WANtB;AAOE,IAAA,WAAW,EAAC,oBAPd;AAQE,IAAA,QAAQ,EAAEvC,KAAK,CAACiD,YARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWE;AAAK,IAAA,KAAK,EAAEjD,KAAK,CAACyC,SAAlB;AAA6B,IAAA,QAAQ,EAAEzC,KAAK,CAACiD,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAExC,KAFT;AAGE,IAAA,QAAQ,EAAGyC,KAAD,IAAWxC,QAAQ,CAACwC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MACPxC,MAAM,CACH,kDAAiDH,KAAM,EADpD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAfF,eAgCE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,EAAE,EAAC,OAHL;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAGyC,KAAD,IAAW;AACnBlD,MAAAA,KAAK,CAACqD,aAAN,CAAoB,OAApB,EAA6BH,KAAK,CAACI,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAA7B;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF,eA8CE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9CF,CADF,CAzBJ,CADF;AAqFD,CAtID;;AAwIA,MAAMC,kBAAkB,GAAG;AAAE/D,EAAAA,GAAG,EAAEA;AAAP,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOgE,kBAAP,CAAP,CAAkC1D,GAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\n\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\n\nconst Add = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n\n  const [data, setData] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [url, setUrl] = useState(\n    \"http://api.riyofirsan.com/users/findQuery?name=redux\"\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n\n      setData(result.data);\n      console.log(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n \n  \n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((response) => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[3].formatted_address,\n        });\n      });\n    });\n  }, []);\n\n  let city = data.city;\n  // console.log(city)\n  let lng = data.lng;\n  // console.log(lng)\n  let lath = data.lat;\n  // console.log(lath)\n\n  return (\n    <Formik\n      initialValues={{\n        name: id,\n        description: \"\",\n        image: null,\n        namePlace: city,\n        long: lng,\n        lat: lath,\n        // tag: \"\",\n      }}\n      onSubmit={(values) => {\n        let formData = new FormData();\n\n        formData.append(\"name\", values.name);\n        formData.append(\"description\", values.description);\n        formData.append(\"image\", values.image);\n        formData.append(\"namePlace\", city);\n        formData.append(\"long\", lng);\n        formData.append(\"lat\", lath);\n        // formData.append(\"tag\", values.tag);\n\n        props.add(formData);\n      }}\n    >\n      {(props) => (\n        <Form onSubmit={props.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control mt-5\"\n                id=\"description\"\n                name=\"description\"\n                rows={6}\n                style={{ resize: \"none\" }}\n                value={props.values.description}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              <div value={props.namePlace} onChange={props.handleChange} />\n              {/* <div value={props.long} onChange={props.handleChange} />\n              <div value={props.lat} onChange={props.handleChange} /> */}\n              \n              <div>\n                <input\n                  type=\"text\"\n                  value={query}\n                  onChange={(event) => setQuery(event.target.value)}\n                />\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    setUrl(\n                      `http://api.riyofirsan.com/users/findQuery?name=${query}`\n                    )\n                  }\n                >\n                  Search\n                </button>\n              </div>\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"image\"\n                name=\"image\"\n                onChange={(event) => {\n                  props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                }}\n              />\n            </div>\n\n            {/* <Filter /> */}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-info\"\n              style={{ backgroundColor: \"#8D7B65\" }}\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispatchToProps = { add: add };\n\nexport default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}