{"ast":null,"code":"import axios from \"axios\";\nconst url = process.env.REACT_APP_API_URL;\nexport const register = (data, history) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${url}/users/register`, data);\n      dispatch({\n        type: \"USER_REGISTER\",\n        payload: response.data.data\n      });\n      history.push(\"/login\");\n      alert(\"success\");\n    } catch (error) {\n      if (error) {\n        const failedRegister = JSON.stringify(error.response.data);\n        error && alert(` ${failedRegister}`);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/register.js"],"names":["axios","url","process","env","REACT_APP_API_URL","register","data","history","dispatch","response","post","type","payload","push","alert","error","failedRegister","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAGA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMC,OAAN,KAAkB;AACxC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAET,GAAI,iBAAlB,EAAmCK,IAAnC,CAAvB;AACAE,MAAAA,QAAQ,CAAE;AACRG,QAAAA,IAAI,EAAG,eADC;AAERC,QAAAA,OAAO,EAAGH,QAAQ,CAACH,IAAT,CAAcA;AAFhB,OAAF,CAAR;AAIAC,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACAC,MAAAA,KAAK,CAAC,SAAD,CAAL;AAED,KATD,CASC,OAAOC,KAAP,EAAa;AACZ,UAAIA,KAAJ,EAAW;AACT,cAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACN,QAAN,CAAeH,IAA9B,CAAvB;AACAS,QAAAA,KAAK,IAAID,KAAK,CAAE,IAAGE,cAAe,EAApB,CAAd;AACD;AACF;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import axios from \"axios\";\n\n\nconst url = process.env.REACT_APP_API_URL\n\n\nexport const register = (data,history) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(`${url}/users/register`,data)\n      dispatch ({\n        type : \"USER_REGISTER\",\n        payload : response.data.data,\n      })\n      history.push(\"/login\")\n      alert(\"success\")\n\n    }catch (error){\n      if (error) {\n        const failedRegister = JSON.stringify(error.response.data)\n        error && alert(` ${failedRegister}`)\n      }\n    }\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}