{"ast":null,"code":"import axios from \"axios\";\nconst user = JSON.parse(localStorage.getItem('user'));\nconst token = user.token;\nconsole.log(user);\nconsole.log(token);\nconst headers = {\n  'Content-Type': 'multipart/form-data',\n  'Accept': 'application/json',\n  'token': `Bearer ${token}`\n};\nconsole.log(headers);\nexport const add = data => {\n  return dispatch => {\n    axios.post(\"https://eyedentity-socialmedia.herokuapp.com/post/create\", {\n      headers: headers\n    }, data).then(response => {\n      dispatch({\n        type: \"POST_ADD\",\n        payload: response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/Home.js"],"names":["axios","user","JSON","parse","localStorage","getItem","token","console","log","headers","add","data","dispatch","post","then","response","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,MAAMC,KAAK,GAAGL,IAAI,CAACK,KAAnB;AACAC,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,MAAMG,OAAO,GAAG;AACd,kBAAiB,qBADH;AAEd,YAAW,kBAFG;AAGd,WAAU,UAASH,KAAM;AAHX,CAAhB;AAKAC,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,OAAO,MAAMC,GAAG,GAAIC,IAAD,IAAU;AAC3B,SAAQC,QAAD,IAAc;AACnBZ,IAAAA,KAAK,CACFa,IADH,CAEI,0DAFJ,EAE+D;AAAEJ,MAAAA,OAAO,EAAEA;AAAX,KAF/D,EAEoFE,IAFpF,EAIGG,IAJH,CAISC,QAAD,IAAc;AAClBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,UADC;AAEPC,QAAAA,OAAO,EAAEF,QAAQ,CAACJ;AAFX,OAAD,CAAR;AAID,KATH;AAUD,GAXD;AAYD,CAbM","sourcesContent":["import axios from \"axios\";\n\nconst user = JSON.parse(localStorage.getItem('user'))\nconst token = user.token\nconsole.log(user)\nconsole.log(token)\n\nconst headers = {\n  'Content-Type' : 'multipart/form-data',\n  'Accept' : 'application/json',\n  'token': `Bearer ${token}`\n}\nconsole.log(headers)\n\nexport const add = (data) => {\n  return (dispatch) => {\n    axios\n      .post(\n        \"https://eyedentity-socialmedia.herokuapp.com/post/create\",{ headers: headers },data\n      )\n      .then((response) => {\n        dispatch({\n          type: \"POST_ADD\",\n          payload: response.data,\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}