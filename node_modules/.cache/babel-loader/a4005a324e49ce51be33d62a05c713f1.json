{"ast":null,"code":"var _jsxFileName = \"/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\"; // import { getlocation } from \"../../actioncreators/GetLocation\";\n\nimport Geocode from \"react-geocode\";\nimport geolocation from \"react-geolocation\";\n\nLocation = props => {\n  // const {\n  //   coords: { latitude, longitude },\n  // } = props;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name\n        });\n      });\n    });\n  }, []);\n  var id, target, options;\n\n  function success(pos) {\n    var crd = pos.coords;\n\n    if (target.latitude === crd.latitude && target.longitude === crd.longitude) {\n      console.log('Congratulations, you reached the target');\n      navigator.geolocation.clearWatch(id);\n    }\n  }\n\n  function error(err) {\n    console.warn('ERROR(' + err.code + '): ' + err.message);\n  }\n\n  target = {\n    latitude: 0,\n    longitude: 0\n  };\n  options = {\n    enableHighAccuracy: false,\n    timeout: 5000,\n    maximumAge: 0\n  };\n  id = navigator.geolocation.watchPosition(success, error, options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Latitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, data.lat)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"Longitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }\n  }, data.lng)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Address: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }\n  }, data.city)));\n}; // const mapStateToProps = (state) => {\n//   return {\n//     coords: state.location.coords,\n//   };\n// };\n// const mapDispatchToProps = {\n//   getlocation: getlocation,\n// };\n\n\nexport default Location;","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js"],"names":["React","useState","useEffect","connect","Geocode","geolocation","Location","props","data","setData","navigator","getCurrentPosition","position","console","log","coords","latitude","longitude","setApiKey","fromLatLng","then","response","results","address_components","long_name","lat","geometry","location","lng","city","id","target","options","success","pos","crd","clearWatch","error","err","warn","code","message","enableHighAccuracy","timeout","maximumAge","watchPosition"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n// import { getlocation } from \"../../actioncreators/GetLocation\";\nimport Geocode from \"react-geocode\";\nimport geolocation from \"react-geolocation\";\n\nLocation = (props) => {\n  // const {\n  //   coords: { latitude, longitude },\n  // } = props;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((response) => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name\n        });\n      });\n    });\n  }, []);\n\n  var id, target, options;\n\nfunction success(pos) {\n  var crd = pos.coords;\n\n  if (target.latitude === crd.latitude && target.longitude === crd.longitude) {\n    console.log('Congratulations, you reached the target');\n    navigator.geolocation.clearWatch(id);\n  }\n}\n\nfunction error(err) {\n  console.warn('ERROR(' + err.code + '): ' + err.message);\n}\n\ntarget = {\n  latitude : 0,\n  longitude: 0\n};\n\noptions = {\n  enableHighAccuracy: false,\n  timeout: 5000,\n  maximumAge: 0\n};\n\nid = navigator.geolocation.watchPosition(success, error, options);\n\n\n\n  return (\n    <div>\n      <div>\n        Latitude: <span>{data.lat}</span>\n      </div>\n      <div>\n        Longitude: <span>{data.lng}</span>\n      </div>\n      <div>\n  Address: <span>{data.city}</span>\n      </div>\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => {\n//   return {\n//     coords: state.location.coords,\n//   };\n// };\n\n// const mapDispatchToProps = {\n//   getlocation: getlocation,\n// };\n\nexport default Location;\n"]},"metadata":{},"sourceType":"module"}