{"ast":null,"code":"import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nconst url = process.env.REACT_APP_API_URL;\nexport const register = data => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(`${url}/users/register`, data);\n      const history = useHistory();\n      dispatch({\n        type: \"USER_REGISTER\",\n        payload: response.data.data\n      });\n      alert(\"succes\");\n      history.push(\"/login\");\n    } catch (error) {\n      if (error) {\n        const failedRegister = JSON.stringify(error.response.data);\n        error && alert(failedRegister);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/register.js"],"names":["axios","useHistory","url","process","env","REACT_APP_API_URL","register","data","dispatch","response","post","history","type","payload","alert","push","error","failedRegister","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAN,CAAY,GAAER,GAAI,iBAAlB,EAAoCK,IAApC,CAAvB;AACA,YAAMI,OAAO,GAAGV,UAAU,EAA1B;AACAO,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,eADC;AAEPC,QAAAA,OAAO,EAAEJ,QAAQ,CAACF,IAAT,CAAcA;AAFhB,OAAD,CAAR;AAIAO,MAAAA,KAAK,CAAC,QAAD,CAAL;AACAH,MAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACd,UAAIA,KAAJ,EAAW;AACT,cAAMC,cAAc,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAK,CAACP,QAAN,CAAeF,IAA9B,CAAvB;AACAS,QAAAA,KAAK,IAAIF,KAAK,CAACG,cAAD,CAAd;AACD;AACF;AACF,GAhBD;AAiBD,CAlBM","sourcesContent":["import axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst url = process.env.REACT_APP_API_URL;\n\nexport const register = (data) => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.post(`${url}/users/register`, data);\n      const history = useHistory();\n      dispatch({\n        type: \"USER_REGISTER\",\n        payload: response.data.data,\n      });\n      alert(\"succes\");\n      history.push(\"/login\");\n    } catch (error) {\n      if (error) {\n        const failedRegister = JSON.stringify(error.response.data);\n        error && alert(failedRegister);\n      }\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}