{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/axios\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nexport const loginUser = userData => dispatch => {\n  axios.post(`https://eyedentity-socialmedia.herokuapp.com/users/login`, userData).then(res => {\n    const token = res.data;\n    localStorage.setItem(\"x-access-token\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"x-access-token\"); // Remove auth header for future requests\n\n  setAuthToken(false); // Set current user to empty object {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/actioncreators/auth.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","loginUser","userData","dispatch","post","then","res","token","data","localStorage","setItem","decoded","setCurrentUser","catch","err","type","payload","response","setUserLoading","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,UAAR,EAAoBC,gBAApB,EAAsCC,YAAtC,QAAyD,SAAzD;AAIA,OAAO,MAAMC,SAAS,GAAGC,QAAQ,IAAIC,QAAQ,IAAI;AAC7CR,EAAAA,KAAK,CACAS,IADL,CACW,0DADX,EACsEF,QADtE,EAEKG,IAFL,CAEUC,GAAG,IAAI;AAET,UAAMC,KAAK,GAAGD,GAAG,CAACE,IAAlB;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCH,KAAvC;AAEAX,IAAAA,YAAY,CAACW,KAAD,CAAZ;AAEA,UAAMI,OAAO,GAAGd,UAAU,CAACU,KAAD,CAA1B;AAEAJ,IAAAA,QAAQ,CAACS,cAAc,CAACD,OAAD,CAAf,CAAR;AACH,GAbL,EAcKE,KAdL,CAcWC,GAAG,IAAIX,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAEjB,UAAP;AAAmBkB,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaT;AAAzC,GAAD,CAd1B;AAeH,CAhBM;AAkBP,OAAO,MAAMI,cAAc,GAAGD,OAAO,IAAI;AACrC,SAAO;AAACI,IAAAA,IAAI,EAAEhB,gBAAP;AAAyBiB,IAAAA,OAAO,EAAEL;AAAlC,GAAP;AACH,CAFM;AAIP,OAAO,MAAMO,cAAc,GAAG,MAAM;AAChC,SAAO;AAACH,IAAAA,IAAI,EAAEf;AAAP,GAAP;AACH,CAFM,C,CAGP;;AACA,OAAO,MAAMmB,UAAU,GAAG,MAAMhB,QAAQ,IAAI;AACxC;AACAM,EAAAA,YAAY,CAACW,UAAb,CAAwB,gBAAxB,EAFwC,CAGxC;;AACAxB,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJwC,CAKxC;;AACAO,EAAAA,QAAQ,CAACS,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAPM","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/axios\";\nimport jwt_decode from \"jwt-decode\";\nimport {GET_ERRORS, SET_CURRENT_USER, USER_LOADING} from \"./types\";\n\n\n\nexport const loginUser = userData => dispatch => {\n    axios\n        .post(`https://eyedentity-socialmedia.herokuapp.com/users/login`, userData)\n        .then(res => {\n            \n            const token = res.data;\n            \n            localStorage.setItem(\"x-access-token\", token);\n            \n            setAuthToken(token);\n            \n            const decoded = jwt_decode(token);\n            \n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => dispatch({type: GET_ERRORS, payload: err.response.data}));\n};\n\nexport const setCurrentUser = decoded => {\n    return {type: SET_CURRENT_USER, payload: decoded};\n};\n\nexport const setUserLoading = () => {\n    return {type: USER_LOADING};\n};\n// Log user out\nexport const logoutUser = () => dispatch => {\n    // Remove token from local storage\n    localStorage.removeItem(\"x-access-token\");\n    // Remove auth header for future requests\n    setAuthToken(false);\n    // Set current user to empty object {} which will set isAuthenticated to false\n    dispatch(setCurrentUser({}));\n};"]},"metadata":{},"sourceType":"module"}