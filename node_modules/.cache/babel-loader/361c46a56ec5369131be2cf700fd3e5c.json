{"ast":null,"code":"var _jsxFileName = \"/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { getlocation } from '../../actioncreators/GetLocation';\nimport Geocode from \"react-geocode\";\n\nconst Location = props => {\n  const {\n    coords: {\n      latitude,\n      longitude\n    }\n  } = props;\n  useEffect(() => {\n    props.getlocation();\n  }, []);\n  Geocode.setApiKey('AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI');\n  const {\n    address,\n    setaddres\n  } = use;\n  Geocode.fromLatLng(`${latitude}`, `${longitude}`).then(response => {\n    address = response.results[0].formatted_address;\n  }, error => {\n    console.error(error);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Latitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }\n  }, latitude)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Longitude: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, longitude)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"address :\", loc));\n};\n\nconst mapStateToProps = state => {\n  return {\n    coords: state.location.coords\n  };\n};\n\nconst mapDispatchToProps = {\n  getlocation: getlocation\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/TagPlace.js"],"names":["React","useState","useEffect","connect","getlocation","Geocode","Location","props","coords","latitude","longitude","setApiKey","address","setaddres","use","fromLatLng","then","response","results","formatted_address","error","console","loc","mapStateToProps","state","location","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAKA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,QAAM;AAACC,IAAAA,MAAM,EAAC;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX;AAAR,MAAiCH,KAAvC;AAIAL,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAACH,WAAN;AACD,GAFQ,EAEP,EAFO,CAAT;AAMEC,EAAAA,OAAO,CAACM,SAAR,CAAkB,yCAAlB;AACA,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA;AAAT,MAAsBC,GAA5B;AACAT,EAAAA,OAAO,CAACU,UAAR,CAAoB,GAAEN,QAAS,EAA/B,EAAkC,GAAEC,SAAU,EAA9C,EACCM,IADD,CAEAC,QAAQ,IAAI;AACZL,IAAAA,OAAO,GAAGK,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAA9B;AAEC,GALD,EAMAC,KAAK,IAAI;AACPC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,GARD;AAcF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,QAAP,CAAf,CADF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,SAAP,CAAhB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeY,GAAf,CAHJ,CADF;AAQD,CApCD;;AAsCA,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAChC,SAAO;AACLhB,IAAAA,MAAM,EAAGgB,KAAK,CAACC,QAAN,CAAejB;AADnB,GAAP;AAGD,CAJD;;AAMA,MAAMkB,kBAAkB,GAAG;AACzBtB,EAAAA,WAAW,EAAGA;AADW,CAA3B;AAIA,eAAeD,OAAO,CAACoB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CpB,QAA5C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { connect } from \"react-redux\";\nimport {getlocation} from '../../actioncreators/GetLocation'\nimport Geocode from \"react-geocode\";\n\n\n\n\nconst Location = (props) => {\n\n  const {coords:{latitude ,longitude}} = props\n\n  \n\n  useEffect(()=>{\n    props.getlocation()\n  },[])\n\n\n\n    Geocode.setApiKey('AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI')\n    const {address,setaddres} = use\n    Geocode.fromLatLng(`${latitude}`,`${longitude}`)\n    .then(\n    response => {\n    address = response.results[0].formatted_address\n      \n    },\n    error => {\n      console.error(error);\n    },\n    \n    )\n    \n    \n\n  return (\n    <div>\n      <div>Latitude: <span>{latitude}</span></div>\n        <div>Longitude: <span>{longitude}</span></div>\n        <div>address :{loc}</div>\n        \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n    coords : state.location.coords\n  }\n}\n\nconst mapDispatchToProps = {\n  getlocation : getlocation\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Location)"]},"metadata":{},"sourceType":"module"}