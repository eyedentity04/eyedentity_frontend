{"ast":null,"code":"var _jsxFileName = \"/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/Add.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Tag from \"./Tag\";\n\nconst Add = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name\n        });\n      });\n    });\n  }, []);\n  let city = data.city;\n  console.log(city);\n  let lng = data.lng;\n  console.log(lng);\n  let lat = data.lat;\n  console.log(lat);\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: id,\n      description: \"\",\n      image: null,\n      tagPlace: [{\n        namePlace: city,\n        long: lng,\n        lat: lat\n      }]\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append(\"name\", values.name);\n      formData.append(\"description\", values.description);\n      formData.append(\"image\", values.image);\n      formData.append(\"tagPlace\", values.tagPlace);\n      props.add(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mt-5\",\n    id: \"description\",\n    name: \"description\",\n    rows: 6,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.description,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    value: props.values.tagPlace,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    onChange: event => {\n      props.setFieldValue(\"image\", event.currentTarget.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    style: {\n      backgroundColor: \"#8D7B65\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = {\n  add: add\n};\nexport default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/components/Homepage/Add.js"],"names":["React","useState","useEffect","Formik","connect","add","Form","Geocode","Tag","Add","props","user","JSON","parse","localStorage","getItem","id","data","setData","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","setApiKey","fromLatLng","then","response","results","address_components","long_name","lat","geometry","location","lng","city","name","description","image","tagPlace","namePlace","long","values","formData","FormData","append","handleSubmit","resize","handleChange","event","setFieldValue","currentTarget","files","backgroundColor","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Tag from \"./Tag\";\n\nconst Add = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n\n  const [data,setData] = useState([])\n  useEffect(()=>{\n    navigator.geolocation.getCurrentPosition(function(position){\n      console.log(position.coords.latitude)\n      console.log(position.coords.longitude)\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\")\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((response)=>{\n        console.log(response.results[0].address_components[4].long_name)\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name\n        })\n      })\n    })\n  },[])\n\n  let city = data.city\n  console.log(city)\n  let lng = data.lng\n  console.log(lng)\n  let lat = data.lat\n  console.log(lat)\n\n  return (\n    <Formik\n      initialValues={{\n        name: id,\n        description: \"\",\n        image: null,\n        tagPlace: [{\n          namePlace : city,\n          long : lng,\n          lat : lat\n        }],\n      }}\n      onSubmit={(values) => {\n        let formData = new FormData();\n\n        formData.append(\"name\", values.name);\n        formData.append(\"description\", values.description);\n        formData.append(\"image\", values.image);\n        formData.append(\"tagPlace\", values.tagPlace);\n\n        props.add(formData);\n      }}\n    >\n      {(props) => (\n        <Form onSubmit={props.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control mt-5\"                                                                                                                                                                                                       \n                id=\"description\"\n                name=\"description\"\n                rows={6}\n                style={{ resize: \"none\" }}\n                value={props.values.description}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              \n              <div\n                value={props.values.tagPlace}\n                onChange={props.handleChange}\n              />\n\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"image\"\n                name=\"image\"\n                onChange={(event) => {\n                  props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                }}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"btn btn-info\"\n              style={{ backgroundColor: \"#8D7B65\" }}\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispatchToProps = { add: add };\n\nexport default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}