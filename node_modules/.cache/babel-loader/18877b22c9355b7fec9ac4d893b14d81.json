{"ast":null,"code":"import axios from \"axios\";\nconst url = process.env.REACT_APP_API_URL;\nexport const add = data => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios.post(`${url}/post/create`, data, {\n      headers: {\n        \"token\": token\n      }\n    }).then(response => {\n      dispatch({\n        type: \"POST_ADD\",\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getData = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios.get(`${url}/post/test`, {\n      headers: {\n        \"token\": token\n      }\n    }).then(posts => {\n      axios.get(`${url}/like/like`, {\n        headers: {\n          \"token\": token\n        }\n      }).then(likes => {\n        const newData = posts.data.maps(item => {\n          return { ...item,\n            likesCount: likes.data.find(like => item._id == like.postId)\n          };\n        });\n      });\n      dispatch({\n        type: \"POST_SHOW\",\n        payload: response.data\n      });\n    });\n  };\n};\nexport const addLike = targetPostId => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    axios.post(`${url}/like/create`, {\n      targetPostId\n    }, {\n      headers: {\n        \"token\": user.token\n      }\n    }).then(response => {\n      console.log(response);\n      dispatch({\n        type: \"POST_ADD_LIKE\",\n        payload: response.data\n      });\n    }).catch(err => err);\n  };\n};\nexport const user = () => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const id = user.id;\n  return dispatch => {\n    axios.get(`${url}/users/show/${id}`).then(response => {\n      dispatch({\n        type: \"USER\",\n        payload: response.data\n      });\n    }).catch(err => {\n      window.alert(err);\n    });\n  };\n};\nexport const editProfile = data => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  const id = user.id;\n  return dispatch => {\n    axios.put(`${url}/users/edit/${id}`, data).then(response => {\n      window.alert(\"success\");\n      console.log(response);\n      dispatch({\n        type: \"EDIT_PROFILE\",\n        payload: response.data\n      });\n    }).catch(err => alert(\"failed to update yout profile\", err));\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/Home.js"],"names":["axios","url","process","env","REACT_APP_API_URL","add","data","dispatch","user","JSON","parse","localStorage","getItem","token","post","headers","then","response","type","payload","getData","get","posts","likes","newData","maps","item","likesCount","find","like","_id","postId","addLike","targetPostId","console","log","catch","err","id","window","alert","editProfile","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst url = process.env.REACT_APP_API_URL\n\nexport const add = (data) => {\n  return (dispatch) => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios\n      .post(`${url}/post/create`, data, {\n        headers: { \"token\": token },\n      })\n      .then((response) => {\n        dispatch({\n          type: \"POST_ADD\",\n          payload: response.data,\n        });\n      });\n  };\n};\n\nexport const getData = () => {\n  return (dispatch) => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios\n      .get(`${url}/post/test`, {\n        headers: { \"token\": token },\n      })\n      .then((posts) => {\n        axios.get(`${url}/like/like` ,{\n          headers: { \"token\": token }\n        }).then((likes) => {\n          const newData = posts.data.maps((item)=>{\n            return{\n              ...item,\n              likesCount:likes.data.find((like)=> item._id == like.postId)\n            }\n          })\n        })\n          dispatch({\n          type: \"POST_SHOW\",\n          payload: response.data\n        });\n      });\n  };\n};\n\nexport const addLike = (targetPostId) => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n      \n      axios.post(`${url}/like/create`,{targetPostId},{\n        headers: { \"token\": user.token },\n      })\n      .then(response => {\n        console.log(response)\n        dispatch({\n          type: \"POST_ADD_LIKE\",\n          payload: response.data\n        })\n      })\n      .catch(err => err)\n  }\n}\n\nexport const user = () => {\n  const user = JSON.parse(localStorage.getItem('user'))\n  const id = user.id\n  return (dispatch) => {\n    axios.get(`${url}/users/show/${id}`)\n    .then( response => {\n      dispatch({\n        type : \"USER\",\n        payload : response.data\n      })\n    })\n    .catch(err =>{\n      window.alert(err)\n    })\n  }\n}\n\nexport const editProfile = (data) =>{\n  const user = JSON.parse(localStorage.getItem('user'))\n  const id = user.id \n  return(dispatch) => {\n    axios.put(`${url}/users/edit/${id}`,data)\n    .then(response => {\n      window.alert(\"success\")\n      console.log(response)\n      dispatch({\n        type : \"EDIT_PROFILE\",\n        payload : response.data\n      })\n    }).catch( err => alert(\"failed to update yout profile\" , err))\n  }\n}"]},"metadata":{},"sourceType":"module"}