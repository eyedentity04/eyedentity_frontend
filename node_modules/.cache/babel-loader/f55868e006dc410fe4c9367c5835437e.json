{"ast":null,"code":"var _jsxFileName = \"/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/Comment.js\";\nimport React from \"react\";\nimport { Formik, Form } from 'formik';\nimport \"./Add.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport { addcomment } from \"../../actioncreators/comment\";\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport axios from \"axios\";\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\n\nconst comment = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  console.log(props.data._id);\n  console.log(props.id);\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      targetPostId: props.data._id,\n      userId: id,\n      commentText: ''\n    },\n    onSubmit: (values, action) => {\n      let formData = new FormData();\n      formData.set(\"userId\", values.userId);\n      formData.set(\"targetPostId\", values.targetPostId);\n      formData.set(\"commentText\", values.commentText);\n      props.addcomment(values);\n      action.resetForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"commentText\",\n    name: \"commentText\",\n    rows: 2,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.commentText,\n    placeholder: \"Comment\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComment,\n    className: \"fa-1x mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), \"\\xA0 Comment\"))));\n};\n\nconst mapDispatchToProps = {\n  addcomment: addcomment\n};\nexport default connect(null, mapDispatchToProps)(comment);","map":{"version":3,"sources":["/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/Comment.js"],"names":["React","Formik","Form","FontAwesomeIcon","connect","addcomment","config","axios","faComment","comment","props","user","JSON","parse","localStorage","getItem","id","console","log","data","_id","targetPostId","userId","commentText","values","action","formData","FormData","set","resetForm","handleSubmit","resize","handleChange","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAAQC,MAAR,EAAeC,IAAf,QAA0B,QAA1B;AACA,OAAO,WAAP;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mCAA1B;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAIzB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,EAAE,GAAGL,IAAI,CAACK,EAAhB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,IAAN,CAAWC,GAAvB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACM,EAAlB;AAEA,sBACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbK,MAAAA,YAAY,EAAEX,KAAK,CAACS,IAAN,CAAWC,GADZ;AAEbE,MAAAA,MAAM,EAAGN,EAFI;AAGbO,MAAAA,WAAW,EAAG;AAHD,KADjB;AAME,IAAA,QAAQ,EAAG,CAACC,MAAD,EAAQC,MAAR,KAAiB;AAC1B,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,MAAAA,QAAQ,CAACE,GAAT,CAAa,QAAb,EAAsBJ,MAAM,CAACF,MAA7B;AACAI,MAAAA,QAAQ,CAACE,GAAT,CAAa,cAAb,EAA4BJ,MAAM,CAACH,YAAnC;AACAK,MAAAA,QAAQ,CAACE,GAAT,CAAa,aAAb,EAA2BJ,MAAM,CAACD,WAAlC;AACAb,MAAAA,KAAK,CAACL,UAAN,CAAiBmB,MAAjB;AACAC,MAAAA,MAAM,CAACI,SAAP;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGnB,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACoB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,cADV;AAEA,IAAA,EAAE,EAAC,aAFH;AAGA,IAAA,IAAI,EAAC,aAHL;AAIA,IAAA,IAAI,EAAE,CAJN;AAKA,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALP;AAMA,IAAA,KAAK,EAAErB,KAAK,CAACc,MAAN,CAAaD,WANpB;AAOA,IAAA,WAAW,EAAC,SAPZ;AAQA,IAAA,QAAQ,EAAEb,KAAK,CAACsB,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAExB,SAAvB;AAAkC,IAAA,SAAS,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,iBAbF,CADF,CAhBJ,CADJ;AAwCC,CAlDH;;AAoDA,MAAMyB,kBAAkB,GAAG;AAAE5B,EAAAA,UAAU,EAAEA;AAAd,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAO6B,kBAAP,CAAP,CAAkCxB,OAAlC,CAAf","sourcesContent":["import React  from \"react\";\nimport {Formik,Form} from 'formik'\nimport \"./Add.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { connect } from \"react-redux\";\nimport {addcomment} from \"../../actioncreators/comment\";\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport axios from \"axios\"\nimport { faComment } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst comment = (props) => {\n  \n  \n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;  \n  \n  console.log(props.data._id)\n  console.log(props.id)\n\n  return (\n      <Formik\n        initialValues={{\n          targetPostId: props.data._id,\n          userId : id,\n          commentText : '',\n        }}\n        onSubmit ={(values,action)=>{\n          let formData = new FormData()\n          formData.set(\"userId\",values.userId)\n          formData.set(\"targetPostId\",values.targetPostId)\n          formData.set(\"commentText\",values.commentText)\n          props.addcomment(values);\n          action.resetForm()\n        }}\n      >\n        {props => (\n          <Form onSubmit={props.handleSubmit}>\n            <div>\n              <div className=\"form-group\">\n                <textarea\n                className=\"form-control\"\n                id=\"commentText\"\n                name=\"commentText\"\n                rows={2}\n                style={{ resize: \"none\" }}\n                value={props.values.commentText}\n                placeholder=\"Comment\"\n                onChange={props.handleChange}\n              />\n              </div>\n              <button type=\"submit\" className=\"btn text-light\">\n              <FontAwesomeIcon icon={faComment} className=\"fa-1x mx-auto\" />\n                &nbsp; Comment\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\nconst mapDispatchToProps = { addcomment: addcomment };\n\nexport default connect(null, mapDispatchToProps)(comment);\n"]},"metadata":{},"sourceType":"module"}