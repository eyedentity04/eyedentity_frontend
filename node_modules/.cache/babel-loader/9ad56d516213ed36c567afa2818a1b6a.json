{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Comment.js\";\nimport React from \"react\";\nimport { Formik, Form } from 'formik';\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actioncreators/comment\"; // import {Form} from 'react-bootstrap'\n\nconst comment = props => {\n  const {\n    _id\n  } = props;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      postId: _id,\n      userComment: id,\n      commentText: ''\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append('po');\n      formData.append('userComment', values.userComment);\n      formData.append('commentText', values.commentText);\n      props.addComment(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"commentText\",\n    name: \"commentText\",\n    rows: 2,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.commentText,\n    placeholder: \"Comment\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    style: {\n      backgroundColor: \"#8D7B65\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Comment\"))));\n};\n\nconst mapDispatchToProps = {\n  addComment: addComment\n};\nexport default connect(null, mapDispatchToProps)(comment);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Comment.js"],"names":["React","Formik","Form","connect","addComment","comment","props","_id","user","JSON","parse","localStorage","getItem","id","postId","userComment","commentText","values","formData","FormData","append","handleSubmit","resize","handleChange","backgroundColor","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAeC,IAAf,QAA0B,QAA1B;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,8BAAzB,C,CACA;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAACC,IAAAA;AAAD,MAAMD,KAAZ;AAEA,QAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,EAAE,GAAGL,IAAI,CAACK,EAAhB;AAEA,sBACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAACP,GADM;AAEbQ,MAAAA,WAAW,EAAGF,EAFD;AAGbG,MAAAA,WAAW,EAAG;AAHD,KADjB;AAME,IAAA,QAAQ,EAAIC,MAAD,IAAU;AACnB,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB;AACAF,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA8BH,MAAM,CAACF,WAArC;AACAG,MAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA8BH,MAAM,CAACD,WAArC;AAEAV,MAAAA,KAAK,CAACF,UAAN,CAAiBc,QAAjB;AACD,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGZ,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACe,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,cADV;AAEA,IAAA,EAAE,EAAC,aAFH;AAGA,IAAA,IAAI,EAAC,aAHL;AAIA,IAAA,IAAI,EAAE,CAJN;AAKA,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALP;AAMA,IAAA,KAAK,EAAEhB,KAAK,CAACW,MAAN,CAAaD,WANpB;AAOA,IAAA,WAAW,EAAC,SAPZ;AAQA,IAAA,QAAQ,EAAEV,KAAK,CAACiB,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAG;AAAnB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,CADF,CAjBJ,CADJ;AAwCC,CA9CH;;AAgDA,MAAMC,kBAAkB,GAAG;AAAErB,EAAAA,UAAU,EAAEA;AAAd,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCpB,OAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {Formik,Form} from 'formik'\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport {addComment} from \"../../actioncreators/comment\";\n// import {Form} from 'react-bootstrap'\n\n\nconst comment = (props) => {\n  const {_id}=props\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;  \n  \n  return (\n      <Formik\n        initialValues={{\n          postId:_id,\n          userComment : id,\n          commentText : '',\n        }}\n        onSubmit ={(values)=>{\n          let formData = new FormData();\n          \n          formData.append('po')\n          formData.append('userComment',values.userComment)\n          formData.append('commentText',values.commentText)\n\n          props.addComment(formData);\n        }}\n      >\n        {props => (\n          <Form onSubmit={props.handleSubmit}>\n            <div>\n              <div className=\"form-group\">\n                <textarea\n                className=\"form-control\"\n                id=\"commentText\"\n                name=\"commentText\"\n                rows={2}\n                style={{ resize: \"none\" }}\n                value={props.values.commentText}\n                placeholder=\"Comment\"\n                onChange={props.handleChange}\n              />\n              </div>\n              <button type=\"submit\" className=\"btn btn-info\" style={{backgroundColor : \"#8D7B65\"}}>\n                Comment\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\nconst mapDispatchToProps = { addComment: addComment };\n\nexport default connect(null, mapDispatchToProps)(comment);\n"]},"metadata":{},"sourceType":"module"}