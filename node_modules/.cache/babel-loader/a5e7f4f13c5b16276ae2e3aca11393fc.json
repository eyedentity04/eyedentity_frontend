{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\nimport \"./tag.css\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\n\nconst Add = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  const [data, setData] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [url, setUrl] = useState(\"http://api.riyofirsan.com/users/findQuery?name=redux\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n      setTags(result.data);\n      console.log(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name\n        });\n      });\n    });\n  }, []);\n  let city = data.city;\n  let lng = data.lng;\n  let lath = data.lat;\n\n  const removeTags = index => {\n    setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\n    console.log(index);\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: id,\n      description: \"\",\n      image: null,\n      namePlace: city,\n      long: lng,\n      lat: lath,\n      tag: \"\"\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append(\"name\", values.name);\n      formData.append(\"description\", values.description);\n      formData.append(\"image\", values.image);\n      formData.append(\"namePlace\", city);\n      formData.append(\"long\", lng);\n      formData.append(\"lat\", lath);\n      formData.append(\"tag\", values.tag);\n      props.add(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control mt-5\",\n    id: \"description\",\n    name: \"description\",\n    rows: 6,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.description,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    value: props.namePlace,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"tag\",\n    name: \"tag\",\n    value: props.values.tag,\n    placeholder: \"tag\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setUrl(`http://api.riyofirsan.com/users/findQuery?name=${query}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: e => setTags(e = []),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Reset\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, tags.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-custom\",\n    onClick: e => props.values.tag = item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 27\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-close-icon\",\n    onClick: () => removeTags(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"x\")))))), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    onChange: event => {\n      props.setFieldValue(\"image\", event.currentTarget.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-info\",\n    style: {\n      backgroundColor: \"#8D7B65\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = {\n  add: add\n};\nexport default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js"],"names":["React","useState","useEffect","Formik","connect","add","Form","Geocode","Filter","axios","Add","props","user","JSON","parse","localStorage","getItem","id","data","setData","tags","setTags","query","setQuery","url","setUrl","fetchData","result","console","log","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","setApiKey","fromLatLng","then","response","results","address_components","long_name","lat","geometry","location","lng","city","lath","removeTags","index","filter","tag","indexOf","name","description","image","namePlace","long","values","formData","FormData","append","handleSubmit","resize","handleChange","event","target","value","e","map","item","_id","setFieldValue","currentTarget","files","backgroundColor","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport \"./Add.css\";\nimport \"./tag.css\";\n\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport Filter from \"./Filter\";\nimport axios from \"axios\";\n\nconst Add = (props) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n\n  const [data, setData] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [query, setQuery] = useState(\"\");\n \n  const [url, setUrl] = useState(\n    \"http://api.riyofirsan.com/users/findQuery?name=redux\"\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n\n      setTags(result.data);\n      console.log(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((response) => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].address_components[4].long_name,\n        });\n      });\n    });\n  }, []);\n\n  let city = data.city;\n  let lng = data.lng;\n  let lath = data.lat;\n\n  const removeTags = (index) => {\n    setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\n    console.log(index);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: id,\n        description: \"\",\n        image: null,\n        namePlace: city,\n        long: lng,\n        lat: lath,\n        tag: \"\",\n      }}\n      onSubmit={(values) => {\n        let formData = new FormData();\n\n        formData.append(\"name\", values.name);\n        formData.append(\"description\", values.description);\n        formData.append(\"image\", values.image);\n        formData.append(\"namePlace\", city);\n        formData.append(\"long\", lng);\n        formData.append(\"lat\", lath);\n        formData.append(\"tag\", values.tag);\n\n        props.add(formData);\n      }}\n    >\n      {(props) => (\n        <Form onSubmit={props.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"form-group\">\n              <textarea\n                className=\"form-control mt-5\"\n                id=\"description\"\n                name=\"description\"\n                rows={6}\n                style={{ resize: \"none\" }}\n                value={props.values.description}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              <div value={props.namePlace} onChange={props.handleChange} />\n\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"tag\"\n                name=\"tag\"\n                value={props.values.tag}\n                placeholder=\"tag\"\n                onChange={props.handleChange}\n              />\n\n              <div>\n                <input\n                  type=\"text\"\n                  value={query}\n                  onChange={(event) => setQuery(event.target.value)}\n                />\n                <div className=\"row\">\n                  <button\n                    type=\"button\"\n                    onClick={() =>\n                      setUrl(\n                        `http://api.riyofirsan.com/users/findQuery?name=${query}`\n                      )\n                    }\n                  >\n                    Search\n                  </button>\n                  <button type=\"button\" onClick={(e) => setTags((e = []))}>\n                    Reset\n                  </button>\n                </div>\n                <div className=\"tags-input\">\n                  <ul id=\"tags\">\n                    {tags.map((item, index) => (\n                      <li key={index} className=\"tag\">\n                        <button\n                          className=\"btn-custom\"\n                          onClick={(e) => (props.values.tag = item._id)}\n                        >\n                          <span className=\"tag-title\">{item.name}</span>\n                        </button>\n\n                        <span\n                          className=\"tag-close-icon\"\n                          onClick={() => removeTags(index)}\n                        >\n                          x\n                        </span>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              </div>\n              <input\n                type=\"file\"\n                className=\"form-control\"\n                id=\"image\"\n                name=\"image\"\n                onChange={(event) => {\n                  props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                }}\n              />\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-info\"\n              style={{ backgroundColor: \"#8D7B65\" }}\n            >\n              Submit\n            </button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispatchToProps = { add: add };\n\nexport default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}