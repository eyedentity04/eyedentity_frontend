{"ast":null,"code":"import React, { useState } from \"react\";\nimport \"./Style.css\";\nimport { connect } from \"react-redux\";\nimport Logo from \"../Img/logo.png\";\nimport { register } from \"../../actioncreators/register\";\nimport { render } from \"@testing-library/react\";\n\nconst Register = props => {\n  const [data, setData] = useState();\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.currentTarget;\n    setData({ ...data,\n      [name]: value\n    });\n  };\n\n  const save = () => {\n    props.register(data);\n  };\n\n  render();\n};\n\nconst mapDispatchToProps = {\n  register: register\n};\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Login/Register.js"],"names":["React","useState","connect","Logo","register","render","Register","props","data","setData","handleChange","event","name","value","currentTarget","save","mapDispatchToProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAE1B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeR,QAAQ,EAA7B;;AAEA,QAAMS,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,aAA9B;AACAL,IAAAA,OAAO,CAAC,EACN,GAAGD,IADG;AAEN,OAACI,IAAD,GAAQC;AAFF,KAAD,CAAP;AAID,GAND;;AAQE,QAAME,IAAI,GAAG,MAAM;AACjBR,IAAAA,KAAK,CAACH,QAAN,CAAeI,IAAf;AACD,GAFD;;AAGAH,EAAAA,MAAM;AACT,CAhBD;;AAoBA,MAAMW,kBAAkB,GAAG;AACzBZ,EAAAA,QAAQ,EAAEA;AADe,CAA3B;AAIA,eAAeF,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCV,QAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Style.css\";\nimport { connect } from \"react-redux\";\nimport Logo from \"../Img/logo.png\";\nimport { register } from \"../../actioncreators/register\";\nimport { render } from \"@testing-library/react\";\n\nconst Register = (props) => {\n  \n  const [data,setData]=useState()\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n    setData({\n      ...data,\n      [name]: value,\n    });\n  }\n\n    const save = () => {\n      props.register(data);\n    };\n    render()\n}\n\n\n\nconst mapDispatchToProps = {\n  register: register,\n};\n\nexport default connect(null, mapDispatchToProps)(Register);\n"]},"metadata":{},"sourceType":"module"}