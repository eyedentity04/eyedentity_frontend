{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport Login from \"./components/Login/Login\";\nimport UserRegister from \"./components/Login/Register\";\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: UserRegister,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: Login,\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/home\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.Login.data\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","connect","createStore","applyMiddleware","Provider","reducers","thunk","Login","UserRegister","store","App","mapStateToProps","state","login","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACG,QAAD,EAAUF,eAAe,CAACG,KAAD,CAAzB,CAAzB;;AAEA,SAASI,GAAT,GAAe;AACb,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAED,YAAnC;AAAiD,IAAA,KAAK,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAED,KAA3B;AAAkC,IAAA,KAAK,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,KAAK,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF,CADF;AAaD;;AAED,MAAMI,eAAe,GAAGC,KAAD,IAAW;AAChC,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACL,KAAN,CAAYO;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACU,eAAD,CAAP,CAAyBD,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\n\nimport Login from \"./components/Login/Login\";\nimport UserRegister from \"./components/Login/Register\"\n\nconst store = createStore(reducers,applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route path=\"/register\" component={UserRegister} exact />\n          <Route path=\"/\" component={Login} exact />\n          <Route path=\"/home\" exact>\n            \n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nconst mapStateToProps =(state) => {\n  return {\n    login: state.Login.data\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}