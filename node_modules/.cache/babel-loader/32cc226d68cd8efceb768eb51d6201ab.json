{"ast":null,"code":"import axios from \"axios\";\nconst url = process.env.REACT_APP_API_URL;\nexport const add = data => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios.post(`${url}/post/create`, data, {\n      headers: {\n        token: token\n      }\n    }).then(response => {\n      dispatch({\n        type: \"POST_ADD\",\n        payload: response.data\n      });\n    });\n  };\n};\nexport const getData = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const token = user.token;\n  axios.get(`${url}/post/test`, {\n    headers: {\n      token: token\n    }\n  }).then(posts => {\n    axios.get(`${url}/like/like`, {\n      headers: {\n        token: token\n      }\n    }).then(likes => {\n      const newData = posts.data.map(item => {\n        return { ...item\n        };\n      });\n    });\n  });\n};\nexport const addLike = targetPostId => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    axios.post(`${url}/like/create`, {\n      targetPostId\n    }, {\n      headers: {\n        token: user.token\n      }\n    }).then(response => {\n      console.log(response);\n      dispatch({\n        type: \"POST_ADD_LIKE\",\n        payload: response.data\n      });\n    }).catch(err => err);\n  };\n};\nexport const user = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return dispatch => {\n    axios.get(`${url}/users/show/${id}`).then(response => {\n      dispatch({\n        type: \"USER\",\n        payload: response.data\n      });\n    }).catch(err => {\n      window.alert(err);\n    });\n  };\n};\nexport const editProfile = data => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return dispatch => {\n    axios.put(`${url}/users/edit/${id}`, data).then(response => {\n      window.alert(\"success\");\n      console.log(response);\n      dispatch({\n        type: \"EDIT_PROFILE\",\n        payload: response.data\n      });\n    }).catch(err => alert(\"failed to update yout profile\", err));\n  };\n};","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/actioncreators/Home.js"],"names":["axios","url","process","env","REACT_APP_API_URL","add","data","dispatch","user","JSON","parse","localStorage","getItem","token","post","headers","then","response","type","payload","getData","get","posts","likes","newData","map","item","addLike","targetPostId","console","log","catch","err","id","window","alert","editProfile","put"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst url = process.env.REACT_APP_API_URL;\n\nexport const add = (data) => {\n  return (dispatch) => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios\n      .post(`${url}/post/create`, data, {\n        headers: { token: token },\n      })\n      .then((response) => {\n        dispatch({\n          type: \"POST_ADD\",\n          payload: response.data,\n        });\n      });\n  };\n};\n\nexport const getData = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const token = user.token;\n  axios.get(`${url}/post/test`, { headers: { token: token } })\n  .then((posts)=>{\n    axios.get(`${url}/like/like`,{headers : {token : token}})\n    .then((likes)=>{\n      const newData = posts.data.map((item)=>{\n        return{\n          ...item,\n          \n        }\n      })\n    })\n  });\n};\n\nexport const addLike = (targetPostId) => {\n  return (dispatch) => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n\n    axios\n      .post(\n        `${url}/like/create`,\n        { targetPostId },\n        {\n          headers: { token: user.token },\n        }\n      )\n      .then((response) => {\n        console.log(response);\n        dispatch({\n          type: \"POST_ADD_LIKE\",\n          payload: response.data,\n        });\n      })\n      .catch((err) => err);\n  };\n};\n\nexport const user = () => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return (dispatch) => {\n    axios\n      .get(`${url}/users/show/${id}`)\n      .then((response) => {\n        dispatch({\n          type: \"USER\",\n          payload: response.data,\n        });\n      })\n      .catch((err) => {\n        window.alert(err);\n      });\n  };\n};\n\nexport const editProfile = (data) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return (dispatch) => {\n    axios\n      .put(`${url}/users/edit/${id}`, data)\n      .then((response) => {\n        window.alert(\"success\");\n        console.log(response);\n        dispatch({\n          type: \"EDIT_PROFILE\",\n          payload: response.data,\n        });\n      })\n      .catch((err) => alert(\"failed to update yout profile\", err));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}