{"ast":null,"code":"var _jsxFileName = \"/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { addcomment } from \"../../actioncreators/comment\";\nimport { getcomment } from \"../../actioncreators/comment\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nconst CommentPost = props => {\n  const url = process.env.REACT_APP_API_URL;\n  const {\n    data\n  } = props;\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const token = user.token;\n    axios.get(`${url}/comment/show`, {\n      headers: {\n        \"token\": token\n      }\n    }).then(response => {\n      console.log(response.data); // dispatch({\n      //   type: \"COMMENT_SHOW\",\n      //   payload: response.data,\n      // });\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  const showComment = data.map((item, index) => {\n    console.log(item);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      data: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card mt-3 w-100\",\n      style: {\n        borderRadius: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead font-weight-bold mb-0 ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, item.userComment)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 29\n      }\n    }, item.commentText))))));\n  });\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"comment\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \" \", showComment), \";\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      targetPostId: props.data._id,\n      userId: id,\n      commentText: ''\n    },\n    onSubmit: (values, action) => {\n      // if(values && !values){\n      window.alert(\"comment succes\");\n      props.addcomment(values);\n      action.resetForm(); // }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"commentText\",\n    name: \"commentText\",\n    rows: 2,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.commentText,\n    placeholder: \"Comment\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Comment\"))))), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.commentUser.data\n  };\n};\n\nconst mapDispatchToProps = {\n  addcomment: addcomment,\n  getcomment: getcomment\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentPost);","map":{"version":3,"sources":["/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js"],"names":["React","useState","useEffect","Formik","Form","connect","addcomment","getcomment","Modal","Button","axios","CommentPost","props","url","process","env","REACT_APP_API_URL","data","user","JSON","parse","localStorage","getItem","token","get","headers","then","response","console","log","catch","err","id","showComment","map","item","index","borderRadius","userComment","commentText","targetPostId","_id","userId","values","action","window","alert","resetForm","handleSubmit","resize","handleChange","onHide","mapStateToProps","state","commentUser","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,QAA3B;AACA,OAAO,WAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,KAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAG3B,QAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AACA,QAAM;AAACC,IAAAA;AAAD,MAASL,KAAf;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,UAAMC,KAAK,GAAGL,IAAI,CAACK,KAAnB;AACAb,IAAAA,KAAK,CACFc,GADH,CACQ,GAAEX,GAAI,eADd,EAC8B;AAC1BY,MAAAA,OAAO,EAAE;AAAE,iBAASF;AAAX;AADiB,KAD9B,EAIGG,IAJH,CAISC,QAAD,IAAc;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACV,IAArB,EAFkB,CAIlB;AACA;AACA;AACA;AACD,KAZH,EAYKa,KAZL,CAYYC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KAdH;AAgBH,GAnBQ,EAmBP,EAnBO,CAAT;AAuBA,QAAMb,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMU,EAAE,GAAGd,IAAI,CAACc,EAAhB;AAEA,QAAMC,WAAW,GAAEhB,IAAI,CAACiB,GAAL,CAAS,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACxCR,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,wBACI;AAAK,MAAA,GAAG,EAAEC,KAAV;AAAiB,MAAA,IAAI,EAAED,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAAEE,QAAAA,YAAY,EAAE;AAAhB,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAG,MAAA,SAAS,EAAC,iCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,IAAI,CAACG,WADV,CADA,CADJ,eAMI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIH,IAAI,CAACI,WADT,CADJ,CANJ,CADJ,CADJ,CADA,CADJ;AAqBH,GAvBkB,CAAnB;AAyBA,sBACI,oBAAC,KAAD,oBACQ3B,KADR;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,uBAAgB,+BAHpB;AAII,IAAA,QAAQ,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKI,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CALJ,eAUI,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6BqB,WAA7B,CADA,MAVJ,eAaI,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACfO,MAAAA,YAAY,EAAE5B,KAAK,CAACK,IAAN,CAAWwB,GADV;AAEfC,MAAAA,MAAM,EAAEV,EAFO;AAGfO,MAAAA,WAAW,EAAE;AAHE,KADnB;AAMI,IAAA,QAAQ,EACN,CAACI,MAAD,EAASC,MAAT,KAAoB;AACtB;AACIC,MAAAA,MAAM,CAACC,KAAP,CAAa,gBAAb;AACAlC,MAAAA,KAAK,CAACN,UAAN,CAAiBqC,MAAjB;AACAC,MAAAA,MAAM,CAACG,SAAP,GAJkB,CAKtB;AAEH,KAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeKnC,KAAK,iBACF,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACoC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,EAAE,EAAC,aAFP;AAGI,IAAA,IAAI,EAAC,aAHT;AAII,IAAA,IAAI,EAAE,CAJV;AAKI,IAAA,KAAK,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD,KALX;AAQI,IAAA,KAAK,EAAErC,KAAK,CAAC+B,MAAN,CAAaJ,WARxB;AASI,IAAA,WAAW,EAAC,SAThB;AAUI,IAAA,QAAQ,EAAE3B,KAAK,CAACsC,YAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAcI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CAdJ,CADJ,CAhBR,CADJ,eA0CI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEtC,KAAK,CAACuC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1CJ,CAbJ,CADJ;AA6DH,CAtHD;;AAwHA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHpC,IAAAA,IAAI,EAAEoC,KAAK,CAACC,WAAN,CAAkBrC;AADrB,GAAP;AAGH,CAJD;;AAMA,MAAMsC,kBAAkB,GAAG;AACvBjD,EAAAA,UAAU,EAAEA,UADW;AAEvBC,EAAAA,UAAU,EAAEA;AAFW,CAA3B;AAMA,eAAeF,OAAO,CAAC+C,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C5C,WAA7C,CAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Formik, Form} from 'formik'\nimport \"./Add.css\";\nimport {connect} from \"react-redux\";\nimport {addcomment} from \"../../actioncreators/comment\";\nimport {getcomment} from \"../../actioncreators/comment\"\nimport {Modal,Button} from \"react-bootstrap\"\nimport axios from \"axios\"\n\nconst CommentPost = (props) => {\n\n\n    const url = process.env.REACT_APP_API_URL\n    const {data} = props\n\n    useEffect(() => {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        const token = user.token;\n        axios\n          .get(`${url}/comment/show`, {\n            headers: { \"token\": token },\n          })\n          .then((response) => {\n            \n            console.log(response.data);\n            \n            // dispatch({\n            //   type: \"COMMENT_SHOW\",\n            //   payload: response.data,\n            // });\n          }).catch((err) => {\n              console.log(err)\n          });\n        \n    },[])\n\n    \n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const id = user.id;\n\n    const showComment =data.map((item,index) => {\n        console.log(item)\n        return(\n            <div key={index} data={item}>\n            <div className=\"card mt-3 w-100\" style={{ borderRadius: \"10px\" }}>\n                <div className=\"card-header\">\n                    <div className=\"d-flex flex-row\">\n                        <div className=\"d-inline-flex flex-column\">\n                        <p className=\"lead font-weight-bold mb-0 ml-2\">\n                            {item.userComment}\n                        </p>\n                        </div>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">\n                               {item.commentText}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        )\n        \n    })\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                   comment\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            <div className=\"container\"> {showComment}</div>;\n            </Modal.Body>\n            <Modal.Footer>\n                <Formik\n                    initialValues={{\n                    targetPostId: props.data._id,\n                    userId: id,\n                    commentText: ''\n                }}\n                    onSubmit\n                    ={(values, action) => {\n                    // if(values && !values){\n                        window.alert(\"comment succes\")\n                        props.addcomment(values);\n                        action.resetForm()\n                    // }\n                    \n                }}>\n                    {props => (\n                        <Form onSubmit={props.handleSubmit}>\n                            <div>\n                                <div className=\"form-group\">\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"commentText\"\n                                        name=\"commentText\"\n                                        rows={2}\n                                        style={{\n                                        resize: \"none\"\n                                    }}\n                                        value={props.values.commentText}\n                                        placeholder=\"Comment\"\n                                        onChange={props.handleChange}/>\n                                </div>\n                                <div className=\"row\">\n                                <button type=\"submit\" className=\"btn text-light\">\n                                    Comment\n                                </button>\n                                \n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        data: state.commentUser.data\n    }\n}\n\nconst mapDispatchToProps = {\n    addcomment: addcomment,\n    getcomment: getcomment,\n   \n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentPost);"]},"metadata":{},"sourceType":"module"}