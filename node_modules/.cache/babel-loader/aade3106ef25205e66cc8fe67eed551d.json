{"ast":null,"code":"var _jsxFileName = \"/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form } from 'formik';\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actioncreators/comment\";\nimport { getComment } from \"../../actioncreators/comment\";\nimport { getData } from \"../../actioncreators/Home\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst CommentPost = props => {\n  const {\n    dataComment\n  } = props;\n  useEffect(() => {\n    if (dataComment && !dataComment.length) {\n      window.alert(\"ini comment mu \");\n      props.getComment();\n    }\n  }, []); // useEffect(()=>{\n  //     \n  //         props.getData()\n  //     \n  // },[])\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id; // const showComment = dataComment.map((item,index) => {\n  //     console.log(item)\n  //     return(\n  //         <div key={item} data={index}>\n  //         <div className=\"card mt-3 w-100\" style={{ borderRadius: \"10px\" }}>\n  //             <div className=\"card-header\">\n  //                 <div className=\"d-flex flex-row\">\n  //                     <div className=\"d-inline-flex flex-column\">\n  //                     <p className=\"lead font-weight-bold mb-0 ml-2\">\n  //                         nama\n  //                     </p>\n  //                     </div>\n  //                     <div className=\"card-body\">\n  //                         <p className=\"card-text\">\n  //                             test\n  //                         </p>\n  //                     </div>\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  //     )\n  // })\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Comment\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      targetPostId: props.data._id,\n      userId: id,\n      commentText: ''\n    },\n    onSubmit: (values, action) => {\n      if (values && !values) {\n        window.alert(\"comment succes\");\n        props.addComment(values);\n        action.resetForm();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"commentText\",\n    name: \"commentText\",\n    rows: 2,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.commentText,\n    placeholder: \"Comment\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, \"Comment\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Close\")))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    dataComment: state.commentUser.data\n  };\n};\n\nconst mapDispatchToProps = {\n  addComment: addComment,\n  getComment: getComment // getData : getData\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentPost);","map":{"version":3,"sources":["/home/puancoffee/Documents/sony_yang_pake/eyedentity_frontend/src/components/Homepage/CommentPost.js"],"names":["React","useState","useEffect","Formik","Form","connect","addComment","getComment","getData","Modal","Button","CommentPost","props","dataComment","length","window","alert","user","JSON","parse","localStorage","getItem","id","targetPostId","data","_id","userId","commentText","values","action","resetForm","handleSubmit","resize","handleChange","onHide","mapStateToProps","state","commentUser","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Formik, Form} from 'formik'\nimport \"./Add.css\";\nimport {connect} from \"react-redux\";\nimport {addComment} from \"../../actioncreators/comment\";\nimport {getComment} from \"../../actioncreators/comment\"\nimport { getData } from \"../../actioncreators/Home\";\nimport {Modal,Button} from \"react-bootstrap\"\n\nconst CommentPost = (props) => {\n\n    const {dataComment} = props\n\n    useEffect(() => {\n        if(dataComment && !dataComment.length){\n           window.alert(\"ini comment mu \")\n            props.getComment()\n        }\n    },[])\n\n    // useEffect(()=>{\n    //     \n    //         props.getData()\n    //     \n    // },[])\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    const id = user.id;\n\n    // const showComment = dataComment.map((item,index) => {\n    //     console.log(item)\n    //     return(\n    //         <div key={item} data={index}>\n    //         <div className=\"card mt-3 w-100\" style={{ borderRadius: \"10px\" }}>\n    //             <div className=\"card-header\">\n    //                 <div className=\"d-flex flex-row\">\n    //                     <div className=\"d-inline-flex flex-column\">\n    //                     <p className=\"lead font-weight-bold mb-0 ml-2\">\n    //                         nama\n    //                     </p>\n    //                     </div>\n    //                     <div className=\"card-body\">\n    //                         <p className=\"card-text\">\n    //                             test\n    //                         </p>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n    //     )\n        \n    // })\n\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            centered>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Comment\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n            {/* <div className=\"container\">{showComment}</div>; */}\n            </Modal.Body>\n            <Modal.Footer>\n                <Formik\n                    initialValues={{\n                    targetPostId: props.data._id,\n                    userId: id,\n                    commentText: ''\n                }}\n                    onSubmit\n                    ={(values, action) => {\n                    if(values && !values){\n                        window.alert(\"comment succes\")\n                        props.addComment(values);\n                        action.resetForm()\n                    }\n                    \n                }}>\n                    {props => (\n                        <Form onSubmit={props.handleSubmit}>\n                            <div>\n                                <div className=\"form-group\">\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"commentText\"\n                                        name=\"commentText\"\n                                        rows={2}\n                                        style={{\n                                        resize: \"none\"\n                                    }}\n                                        value={props.values.commentText}\n                                        placeholder=\"Comment\"\n                                        onChange={props.handleChange}/>\n                                </div>\n                                <div className=\"row\">\n                                <button type=\"submit\" className=\"btn text-light\">\n                                    Comment\n                                </button>\n                                <Button onClick={props.onHide}>Close</Button>\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </Modal.Footer>\n        </Modal>\n    )\n\n}\n\nconst mapStateToProps = (state) => {\n    return {dataComment: state.commentUser.data}\n}\n\nconst mapDispatchToProps = {\n    addComment: addComment,\n    getComment: getComment,\n    // getData : getData\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentPost);"]},"metadata":{},"sourceType":"module"}