{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport axios from \"axios\";\nimport \"./Add.css\";\nimport \"./tag.css\";\n\nconst Add = props => {\n  const Url = process.env.REACT_APP_API_URL;\n  const key = process.env.REACT_APP_API_KEY;\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  const [data, setData] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [tag, setTag] = useState([]);\n  const [url, setUrl] = useState(\"https://api.riyofirsan.com/users/findQuery?name=redux\");\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n      setTags(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(`${key}`);\n      Geocode.fromLatLng(position.coords.latitude, position.coords.longitude).then(response => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].formatted_address\n        });\n      });\n    });\n  }, []);\n  let city = data.city;\n  let lng = data.lng;\n  let lath = data.lat;\n\n  const removeTags = index => {\n    setTags([...tags.filter(tag => tags.indexOf(tag) !== index)]);\n  };\n\n  const searchTags = async query => {\n    const result = await axios(`https://api.riyofirsan.com/users/findQuery?name=${query}`);\n    setTags(result.data);\n  };\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: id,\n      description: \"\",\n      image: null,\n      namePlace: city,\n      long: lng,\n      lat: lath,\n      tag: \"\"\n    },\n    onSubmit: (values, action) => {\n      let formData = new FormData();\n      formData.set(\"name\", values.name);\n      formData.set(\"description\", values.description);\n      formData.set(\"namePlace\", city);\n      formData.set(\"long\", lng);\n      formData.set(\"lat\", lath);\n      formData.append(\"image\", values.image);\n      tag.forEach(item => {\n        formData.append(\"tag\", item._id);\n      });\n      props.add(formData);\n      action.resetForm();\n      setTag([]);\n      setTags([]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, tag.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-close-icon\",\n    onClick: () => removeTags(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }, \"x\"))))), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control\",\n    id: \"description\",\n    name: \"description\",\n    rows: 6,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.description,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    value: props.namePlace,\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Tag Your Friends Here\",\n    value: query,\n    onChange: event => setQuery(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn text-light\",\n    onClick: () => searchTags(query),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tags-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, tags.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    className: \"tag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-custom\",\n    type: \"button\",\n    onClick: e => setTag([...tag, item]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"tag-close-icon\",\n    onClick: () => removeTags(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 23\n    }\n  }, \"x\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"custom-btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, \"Upload a file\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"form-control\",\n    id: \"image\",\n    name: \"image\",\n    onChange: event => {\n      props.setFieldValue(\"image\", event.currentTarget.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn text-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Submit\")))));\n};\n\nconst mapDispatchToProps = {\n  add: add\n};\nexport default connect(null, mapDispatchToProps)(Add);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Add.js"],"names":["React","useState","useEffect","Formik","connect","add","Form","Geocode","axios","Add","props","Url","process","env","REACT_APP_API_URL","key","REACT_APP_API_KEY","user","JSON","parse","localStorage","getItem","id","data","setData","tags","setTags","query","setQuery","tag","setTag","url","setUrl","fetchData","result","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","setApiKey","fromLatLng","then","response","results","address_components","long_name","lat","geometry","location","lng","city","formatted_address","lath","removeTags","index","filter","indexOf","searchTags","name","description","image","namePlace","long","values","action","formData","FormData","set","append","forEach","item","_id","resetForm","handleSubmit","map","resize","handleChange","event","target","value","e","setFieldValue","currentTarget","files","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Formik } from \"formik\";\nimport { connect } from \"react-redux\";\nimport { add } from \"../../actioncreators/Home\";\nimport { Form } from \"react-bootstrap\";\nimport Geocode from \"react-geocode\";\nimport axios from \"axios\";\nimport \"./Add.css\";\nimport \"./tag.css\";\n\nconst Add = (props) => {\n  const Url = process.env.REACT_APP_API_URL;\n  const key = process.env.REACT_APP_API_KEY;\n\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n\n  const [data, setData] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  const [tag, setTag] = useState([]);\n\n  const [url, setUrl] = useState(\n    \"https://api.riyofirsan.com/users/findQuery?name=redux\"\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(url);\n\n      setTags(result.data);\n    };\n\n    fetchData();\n  }, [url]);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      console.log(position.coords.latitude);\n      console.log(position.coords.longitude);\n      Geocode.setApiKey(`${key}`);\n      Geocode.fromLatLng(\n        position.coords.latitude,\n        position.coords.longitude\n      ).then((response) => {\n        console.log(response.results[0].address_components[4].long_name);\n        setData({\n          lat: response.results[3].geometry.location.lat,\n          lng: response.results[3].geometry.location.lng,\n          city: response.results[0].formatted_address,\n        });\n      });\n    });\n  }, []);\n\n  let city = data.city;\n  let lng = data.lng;\n  let lath = data.lat;\n\n  const removeTags = (index) => {\n    setTags([...tags.filter((tag) => tags.indexOf(tag) !== index)]);\n  };\n\n  const searchTags = async (query) => {\n    const result = await axios (\n      `https://api.riyofirsan.com/users/findQuery?name=${query}`\n    )\n    setTags(result.data)\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        name: id,\n        description: \"\",\n        image: null,\n        namePlace: city,\n        long: lng,\n        lat: lath,\n        tag: \"\",\n      }}\n      onSubmit={(values, action) => {\n        let formData = new FormData();\n\n        formData.set(\"name\", values.name);\n        formData.set(\"description\", values.description);\n        formData.set(\"namePlace\", city);\n        formData.set(\"long\", lng);\n        formData.set(\"lat\", lath);\n        formData.append(\"image\", values.image);\n\n        tag.forEach((item) => {\n          formData.append(\"tag\", item._id);\n        });\n\n        props.add(formData);\n        action.resetForm();\n        setTag([])\n        setTags([])\n      }}\n    >\n      {(props) => (\n        <Form onSubmit={props.handleSubmit}>\n          <div className=\"container\">\n            <div className=\"form-group\">\n              <div className=\"tags-input\">\n                <ul id=\"tags\">\n                  {tag.map((item, index) => (\n                    <li key={index} className=\"tag\">\n                      <button className=\"btn-custom\">\n                        <span className=\"tag-title\">{item.name}</span>\n                      </button>\n\n                      <span\n                        className=\"tag-close-icon\"\n                        onClick={() => removeTags(index)}\n                      >\n                        x\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* <input\n                type=\"text\"\n                className=\"form-control mt-5\"\n                id=\"tag\"\n                name=\"tag\"\n                value={props.values.tag}\n                placeholder=\"Tag Someone With Search\"\n                readOnly=\"readOnly\"\n                onChange={props.handleChange}\n              /> */}\n\n              <textarea\n                className=\"form-control\"\n                id=\"description\"\n                name=\"description\"\n                rows={6}\n                style={{ resize: \"none\" }}\n                value={props.values.description}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              <div value={props.namePlace} onChange={props.handleChange} />\n\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Tag Your Friends Here\"\n                value={query}\n                onChange={(event) => setQuery(event.target.value)}\n              />\n              <button\n                type=\"button\"\n                className=\"btn text-light\"\n                onClick={() => searchTags(query)}\n              >\n                Search\n              </button>\n\n              <div className=\"tags-input\">\n                <ul id=\"tags\">\n                  {tags.map((item, index) => (\n                    <li key={index} className=\"tag\">\n                      <button\n                        className=\"btn-custom\"\n                        type=\"button\"\n                        onClick={(e) => setTag([...tag, item])}\n                      >\n                        <span className=\"tag-title\">{item.name}</span>\n                      </button>\n\n                      <span\n                        className=\"tag-close-icon\"\n                        onClick={() => removeTags(index)}\n                      >\n                        x\n                      </span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              <div className=\"upload-btn-wrapper\">\n                <button type=\"submit\" className=\"custom-btn \">\n                  Upload a file\n                </button>\n\n                <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  id=\"image\"\n                  name=\"image\"\n                  onChange={(event) => {\n                    props.setFieldValue(\"image\", event.currentTarget.files[0]);\n                  }}\n                />\n              </div>\n              <br />\n              <button type=\"submit\" className=\"btn text-light\">\n                Submit\n              </button>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nconst mapDispatchToProps = { add: add };\n\nexport default connect(null, mapDispatchToProps)(Add);\n"]},"metadata":{},"sourceType":"module"}