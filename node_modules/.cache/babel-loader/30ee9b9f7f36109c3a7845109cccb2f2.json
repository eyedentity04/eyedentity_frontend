{"ast":null,"code":"import { GET_LOCATION } from \"./Type\";\nexport const getlocation = () => {\n  return disptach => {\n    const geolocation = navigator.geolocation; // const location = (resolve, reject) => {\n    //   console.log(\"halo\");\n    //   if (!geolocation) {\n    //     reject(new Error(\"NOT SUPORTED\"));\n    //   }\n\n    geolocation.getCurrentPosition(position => {\n      disptach({\n        type: GET_LOCATION,\n        payload: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        }\n      });\n    });\n    Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n    Geocode.fromLatLng(`${latitude}`, `${longitude}`).then(response => {\n      const address = response.results[0].formatted_address;\n    }); // };\n    // console.log(location);\n  };\n};","map":{"version":3,"sources":["/home/sonynurdianto/Documents/eyedentity_frontend/src/actioncreators/GetLocation.js"],"names":["GET_LOCATION","getlocation","disptach","geolocation","navigator","getCurrentPosition","position","type","payload","latitude","coords","longitude","Geocode","setApiKey","fromLatLng","then","response","address","results","formatted_address"],"mappings":"AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAC/B,SAAQC,QAAD,IAAc;AACnB,UAAMC,WAAW,GAAGC,SAAS,CAACD,WAA9B,CADmB,CAGnB;AACA;AACA;AACA;AACA;;AAGAA,IAAAA,WAAW,CAACE,kBAAZ,CAAgCC,QAAD,IAAc;AAC3CJ,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAEP,YADC;AAEPQ,QAAAA,OAAO,EAAE;AACPC,UAAAA,QAAQ,EAAEH,QAAQ,CAACI,MAAT,CAAgBD,QADnB;AAEPE,UAAAA,SAAS,EAAEL,QAAQ,CAACI,MAAT,CAAgBC;AAFpB;AAFF,OAAD,CAAR;AAOD,KARD;AASAC,IAAAA,OAAO,CAACC,SAAR,CAAkB,yCAAlB;AACAD,IAAAA,OAAO,CAACE,UAAR,CAAoB,GAAEL,QAAS,EAA/B,EAAmC,GAAEE,SAAU,EAA/C,EAAkDI,IAAlD,CAAwDC,QAAD,IAAc;AACnE,YAAMC,OAAO,GAAGD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AACD,KAFD,EApBmB,CAwBnB;AACA;AACD,GA1BD;AA2BD,CA5BM","sourcesContent":["import { GET_LOCATION } from \"./Type\";\n\nexport const getlocation = () => {\n  return (disptach) => {\n    const geolocation = navigator.geolocation;\n\n    // const location = (resolve, reject) => {\n    //   console.log(\"halo\");\n    //   if (!geolocation) {\n    //     reject(new Error(\"NOT SUPORTED\"));\n    //   }\n\n    \n    geolocation.getCurrentPosition((position) => {\n      disptach({\n        type: GET_LOCATION,\n        payload: {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        },\n      });\n    });\n    Geocode.setApiKey(\"AIzaSyAVDqkzOARvGHvFnfaIYEiDBeIFaTjDDGI\");\n    Geocode.fromLatLng(`${latitude}`, `${longitude}`).then((response) => {\n      const address = response.results[0].formatted_address\n    });\n\n    // };\n    // console.log(location);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}