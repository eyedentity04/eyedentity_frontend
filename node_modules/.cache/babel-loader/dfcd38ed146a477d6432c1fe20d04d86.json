{"ast":null,"code":"var _jsxFileName = \"/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Comment.js\";\nimport React from \"react\";\nimport { Formik } from 'formik';\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actioncreators/comment\";\nimport { Form } from 'react-bootstrap';\n\nconst comment = props => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      name: id,\n      comment: ''\n    },\n    onSubmit: values => {\n      let formData = new FormData();\n      formData.append('name', values.name);\n      formData.append('comment', values.comment);\n      props.addComment(formData);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props => /*#__PURE__*/React.createElement(Form, {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"form-control \",\n    id: \"comment\",\n    name: \"comment\",\n    rows: 2,\n    style: {\n      resize: \"none\"\n    },\n    value: props.values.comment,\n    placeholder: \"Type something....\",\n    onChange: props.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-info\",\n    style: {\n      backgroundColor: \"#8D7B65\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = {\n  addComment: addComment\n};\nexport default connect(null, mapDispatchToProps)(comment);","map":{"version":3,"sources":["/home/lenovo-linux/Desktop/glints/project/final-project/eyedentity_frontend/src/components/Homepage/Comment.js"],"names":["React","Formik","connect","addComment","Form","comment","props","user","JSON","parse","localStorage","getItem","id","name","values","formData","FormData","append","handleSubmit","resize","handleChange","backgroundColor","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,8BAAzB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;AACA,QAAMC,EAAE,GAAGL,IAAI,CAACK,EAAhB;AAEA,sBACI,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAGD,EADM;AAEbP,MAAAA,OAAO,EAAG;AAFG,KADjB;AAKE,IAAA,QAAQ,EAAIS,MAAD,IAAU;AACnB,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBH,MAAM,CAACD,IAA9B;AACAE,MAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA0BH,MAAM,CAACT,OAAjC;AAEAC,MAAAA,KAAK,CAACH,UAAN,CAAiBY,QAAjB;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcGT,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEA,KAAK,CAACY,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,eADV;AAEA,IAAA,EAAE,EAAC,SAFH;AAGA,IAAA,IAAI,EAAC,SAHL;AAIA,IAAA,IAAI,EAAE,CAJN;AAKA,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KALP;AAMA,IAAA,KAAK,EAAEb,KAAK,CAACQ,MAAN,CAAaT,OANpB;AAOA,IAAA,WAAW,EAAC,oBAPZ;AAQA,IAAA,QAAQ,EAAEC,KAAK,CAACc,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,CADF,eAcE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAG;AAAnB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,CADF,CAfJ,CADJ;AAuCC,CA5CH;;AA8CA,MAAMC,kBAAkB,GAAG;AAAEnB,EAAAA,UAAU,EAAEA;AAAd,CAA3B;AAEA,eAAeD,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,OAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {Formik} from 'formik'\nimport \"./Add.css\";\nimport { connect } from \"react-redux\";\nimport {addComment} from \"../../actioncreators/comment\";\nimport {Form} from 'react-bootstrap'\n\n\nconst comment = (props) => {\n  \n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  const id = user.id;  \n  \n  return (\n      <Formik\n        initialValues={{\n          name : id,\n          comment : '',\n        }}\n        onSubmit ={(values)=>{\n          let formData = new FormData();\n\n          formData.append('name',values.name)\n          formData.append('comment',values.comment)\n\n          props.addComment(formData);\n        }}\n      >\n        {props => (\n          <Form onSubmit={props.handleSubmit}>\n            <div>\n              <div className=\"form-group\">\n                <textarea\n                className=\"form-control \"\n                id=\"comment\"\n                name=\"comment\"\n                rows={2}\n                style={{ resize: \"none\" }}\n                value={props.values.comment}\n                placeholder=\"Type something....\"\n                onChange={props.handleChange}\n              />\n              <br/>\n              </div>\n              <button type=\"submit\" className=\"btn btn-info\" style={{backgroundColor : \"#8D7B65\"}}>\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n\nconst mapDispatchToProps = { addComment: addComment };\n\nexport default connect(null, mapDispatchToProps)(comment);\n"]},"metadata":{},"sourceType":"module"}